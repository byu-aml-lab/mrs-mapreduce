- speculative execution
- the done call should have some identifier of which job is being finished
  in order to reduce possible confusion; once this is done, the slave can
  retry calling done
- add an input splitter; use the "Range:" header in HTTP requests as part of
  the split implementation.  See also the "urlgrabber" module.  To implement
  this in the HTTP server, you will have to implement do_GET on its own (see
  http://techlists.org/archives/programming/pythonlist/2002-02/msg04678.shtml)
- show current status by creating an HTTP server on the master (with an
  option)
- have reducers start collecting data before all of the input files are ready
- find something more sane than Twisted (something generator based would be
  really nice)


########################################################################

Calling C Mappers and Reducers:

Use ctypes and create a callback function: emit.  From C's perspective:

void emit(char *key, char *value);

Pass the C function the key (as a c_char_p), the list of values (probably as a
char **), and a function pointer to emit.  Or something like that.
