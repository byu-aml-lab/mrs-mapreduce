- switch to producer-consumer model for downloading both File and HTTP input
- fix "ping" timeouts; "connection refused" errors work, but for some
  reason hangs don't get registered as a failure
  Also, fix timeouts in general.  Don't use socket.setdefaulttimeout; use
  Twisted instead.
- make the slave use two processes and one thread.  The first process would be
  completely asynchronous in Twisted.  The second process would be the worker
  thread.  It needs to be a process so that the subprocess module can work
  properly within optimization functions.  Use the processing module for
  communication.
- logging
- add an input splitter; use the "Range:" header in HTTP requests as part of
  the split implementation.  See also the "urlgrabber" module.  To implement
  this in the HTTP server, you will have to implement do_GET on its own (see
  http://techlists.org/archives/programming/pythonlist/2002-02/msg04678.shtml)
- show current status by creating an HTTP server on the master (with an
  option)
- have reducers start collecting data before all of the input files are ready


########################################################################

Calling C Mappers and Reducers:

Use ctypes and create a callback function: emit.  From C's perspective:

void emit(char *key, char *value);

Pass the C function the key (as a c_char_p), the list of values (probably as a
char **), and a function pointer to emit.  Or something like that.
